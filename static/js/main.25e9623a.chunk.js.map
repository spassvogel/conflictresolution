{"version":3,"sources":["common/constants.ts","content/parseContent.ts","components/pixi/Marker.tsx","components/contentModal/YoutubeModalContent.tsx","images/ui/check.svg","components/contentModal/OptionsModalContent.tsx","components/contentModal/IFrameModalContent.tsx","components/pixi/SituationScene.tsx","components/contentModal/ConflictModalContent.tsx","components/pixi/Forklift.tsx","components/contentModal/index.tsx","components/pixi/Viewport.tsx","components/pixi/Conveyor.tsx","components/pixi/BigRacks.tsx","components/Main.tsx","components/introModal/introModal.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["ContentType","SceneElementType","AvatarPose","SequenceItemType","parsed","rawJson","map","json","type","options","youtube","iframe","conflict","Marker","props","ref","useRef","data","useState","position","PIXI","useEffect","gsap","from","current","duration","ease","pixi","visible","scale","delay","bounceAnim","bounce","to","yoyo","repeat","y","Math","random","kill","onDragStart","event","onDragEnd","undefined","console","log","onDragMove","anchor","interactive","image","process","mousedown","touchstart","mouseup","mouseupoutside","mousemove","touchmove","YoutubeModalContent","content","url","width","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","createElement","_ref3","_ref4","id","className","points","_ref","svgRef","title","x","height","viewBox","style","enableBackground","xmlSpace","ForwardRef","forwardRef","OptionsModalContent","selectedOption","selectOption","description","backgroundImage","bannerImg","option","index","onClick","disabled","IframeModalContent","src","SituationScene","sceneConfig","avatar","otherProps","backgroundColor","e","sceneElement","flipped","pose","renderElement","registerPlugin","TextPlugin","Orientation","ConflictModalContent","selectedAnswer","reaction","useMemo","reactions","confirmed","setConfirmed","scene","setSceneConfig","balloonRef","balloonArrowRef","balloonTextRef","insetRef","nextButtonRef","sound","add","sequence","playSequence","useCallback","tl","timeline","balloonText","inset","killTweensOf","removeAttribute","innerHTML","text","forEach","sequenceItem","onStart","visibility","speech","balloonArrowPos","right","positionArrow","caption","value","oldClass","newClass","Linear","easeNone","autoAlpha","display","left","Sine","easeInOut","rect","getBoundingClientRect","top","offsetTop","window","addEventListener","removeEventListener","handleReplay","handleYes","correct","play","setCorrectAnswer","renderOption","element","otherOptions","querySelectorAll","opacity","parentTop","querySelector","childTop","distance","abs","onComplete","setTimeout","handleOptionClick","currentTarget","split","p","substring","confirmText","currentIndex","parseInt","currentLabel","seek","ContentModal","onClose","handleClose","isOpen","ariaHideApp","portalClassName","overlayClassName","onRequestClose","header","renderContent","Viewport","React","app","useApp","cursor","renderer","plugins","interaction","cursorStyles","pointer","PixiComponentViewport","PixiComponent","create","viewport","PixiViewport","screenWidth","screenHeight","worldWidth","worldHeight","ticker","minScale","maxScale","drag","pinch","wheel","clamp","direction","clampZoom","decelerate","boxImagePath","Conveyor","boxContainerRef","boxTexture","setBoxTexture","loader","resources","texture","load","_","rss","spawnBox","sprite","addChild","repeatDelay","alpha","Forklift","orientation","northEast","southEast","southWest","northWest","BigRacks","forkliftRef","forkliftOrientation","setForkliftOrientation","forkliftLane","setForkliftLane","name","PixiPlugin","registerPIXI","Main","viewportRef","selectedSituation","setSelectedSituation","answers","setAnswers","canvasWidth","setCanvasWidth","canvasHeight","setCanvasHeight","resize","min","innerWidth","outerWidth","innerHeight","outerHeight","moveCenter","blur","autoPlay","selectedContent","renderMarker","contentItem","pointerdown","handleMarkerClick","join","transparent","answer","copy","getAvatarImage","IntroModal","selectedAvatar","renderAvatar","filters","OutlineFilter","zIndex","stageHeight","stageWidth","onChangeAvatar","BlurFilter","sortableChildren","App","intro","setIntro","setAvatar","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.25e9623a.chunk.js","sourcesContent":["export interface ISituations {\n  [name: string]: ISituation\n}\n  \nexport interface ISituation {\n  header: string;\n  description: string;\n  options: string[];\n}\n\nexport enum ContentType {\n  youtube = \"youtube\",\n  options = \"options\",\n  iframe = \"iframe\",\n  conflict = \"conflict\",\n}\n  \nexport interface IContent<T extends YoutubeContent | OptionsContent | IframeContent | ConflictContent> {\n  position: number[];\n  type: ContentType;\n  header: string;\n  content: T;\n}\n\nexport type AnyContent = IContent<YoutubeContent> | IContent<OptionsContent> | IContent<IframeContent> | IContent<ConflictContent>;\n\nexport interface YoutubeContent {\n  url: string;\n}\n\nexport interface IframeContent {\n  url: string;\n  height?: number | string;\n}\n\nexport interface OptionsContent {\n  description: string;\n  bannerImg: string;\n  options: string[];\n  correctAnswers: number[];\n}\nexport interface ConflictContent {\n  description: string;\n  sequence: SequenceItem[];\n  scene: SceneElement[];\n  situationSpeech: string;\n  options: string[];\n  reactions: ConflictReaction[];\n}\n\nexport interface SceneElement {\n  image?: string;\n  type?: SceneElementType;\n  position?: [number, number];\n  scale?: number;\n  flipped: boolean;\n  pose: AvatarPose;\n}\n\nexport enum SceneElementType {\n  sprite = \"sprite\",\n  avatar = \"avatar\",\n}\n\nexport enum AvatarPose {\n  angle = \"angle\",\n  front = \"front\",\n  side = \"side\",\n  angry = \"angry\"\n}\n\nexport interface ConflictReaction { \n  correct: boolean, \n  text: string, \n  scene: SceneElement[]; \n  confirmText: string, \n  confirmImage?: string \n}\n\nexport enum SequenceItemType {\n  caption = 'caption',\n  speech = 'speech',\n  image = 'image',  // image, no speech\n}\n\nexport interface SequenceItem {\n  type: SequenceItemType,\n  text: string,\n  balloonArrowPos?: number;\n  \n  scene?: SceneElement[]; // optional override\n}","import rawJson from './content.json';\nimport { IContent, ContentType, OptionsContent, YoutubeContent, IframeContent, ConflictContent, AnyContent } from '../common/constants';\n\nconst parsed = rawJson.map((json) => {\n  const type: ContentType = (ContentType as any)[json.type];\n  switch (type) {\n    case ContentType.options: \n      return json as any as IContent<OptionsContent>;\n    case ContentType.youtube: \n      return json as any as IContent<YoutubeContent>;\n    case ContentType.iframe: \n      return json as any as IContent<IframeContent>;\n    case ContentType.conflict: \n      return json as any as IContent<ConflictContent>;\n  }\n});\nexport default parsed as AnyContent[];","import React, { useRef, useEffect, useState } from 'react';\nimport { Sprite } from '@inlet/react-pixi';\nimport * as PIXI from 'pixi.js';\nimport { gsap } from 'gsap'\n\n\nconst CAN_DRAG = false;\ninterface Props {\n    position?: PIXI.Point;\n    delay?: number; // Wait this long before showing\n    bounce?: boolean;\n}\n\nconst Marker = (props: Props & React.ComponentProps<typeof Sprite>) => {\n    const ref = useRef<PIXI.Sprite>(null);\n    const data = useRef<PIXI.interaction.InteractionData>();\n    const [position, setPosition] = useState<PIXI.Point>(props.position || new PIXI.Point());\n    const popInDuration = 1;\n\n    useEffect(() => {\n        // Pop in animation!\n        gsap.from(ref.current, { \n          duration: popInDuration,\n          ease: \"elastic.out(2, 0.5)\",\n          pixi: { \n            visible: false,\n            scale: .1, \n          }\n        }).delay(props.delay || 0);\n    }, [props.delay]);\n\n    useEffect(() => {\n        let bounceAnim: gsap.core.Tween;\n        // Bounce animation!\n        if (props.bounce !== false) {\n            bounceAnim = gsap.to(ref.current, { \n                duration: .5,\n                yoyo: true,\n                repeat: -1,\n                pixi: { \n                  y: '-=40', \n                }\n              }).delay(popInDuration + Math.random());      \n        }\n        return () => {\n            bounceAnim.kill();\n        }\n    }, [props.bounce]);\n\n    const onDragStart = (event: PIXI.interaction.InteractionEvent) => {\n        if (!CAN_DRAG) return;\n        // store a reference to the data\n        // the reason for this is because of multitouch\n        // we want to track the movement of this particular touch\n        data.current = event.data;\n        event.stopPropagation(); // Stop dragging the map!\n    }\n    \n    const onDragEnd = () => {\n        data.current = undefined;\n        console.log(position);\n    }\n    \n    const onDragMove = () => {\n        if (!CAN_DRAG) return;\n        if (data.current)\n        {\n            const newPosition = data.current.getLocalPosition(ref.current!.parent);\n            setPosition(newPosition);\n        }\n    }\n    \n    return (\n        <Sprite \n            { ...props }\n            anchor={[0.5, 0.5]}\n            position={position}\n            ref={ref}\n            interactive={true}\n            image={`${process.env.PUBLIC_URL}/images/ui/marker.svg`}\n            mousedown={onDragStart}\n            touchstart={onDragStart}\n            mouseup={onDragEnd}\n            mouseupoutside={onDragEnd}\n            mousemove={onDragMove}\n            touchmove={onDragMove}\n        />\n    );\n}\n\nexport default Marker;","import React from 'react';\nimport { YoutubeContent } from '../../common/constants';\nimport ReactPlayer from \"react-player\";\n\ninterface Props {\n  content: YoutubeContent;\n}\n\nconst YoutubeModalContent = (props: Props) => {\n  const {content} = props;\n  return (\n    <ReactPlayer\n      url={content.url}\n      width=\"100%\"\n    /> \n  )\n}\n\nexport default YoutubeModalContent;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"style\", {\n  type: \"text/css\"\n}, \"\\n\\t.st0{fill:none;stroke:#3FA548;stroke-width:32;}\\n\");\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"defs\", null);\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Page-1\"\n}, /*#__PURE__*/React.createElement(\"polyline\", {\n  id: \"checkmark\",\n  className: \"st0\",\n  points: \"11.33,88.97 88.95,166.87 244.67,11.32  \"\n}));\n\nvar SvgCheck = function SvgCheck(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"m-check-mark\",\n    x: \"0px\",\n    y: \"0px\",\n    width: \"255.97px\",\n    height: \"189.51px\",\n    viewBox: \"0 0 255.97 189.51\",\n    style: {\n      enableBackground: \"new 0 0 255.97 189.51\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3, _ref4);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgCheck, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/check.81786b3c.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState } from 'react';\nimport { OptionsContent } from '../../common/constants';\nimport { ReactComponent as CheckSvg } from './../../images/ui/check.svg';\n\ninterface Props {\n  content: OptionsContent;\n}\n\nconst OptionsModalContent = (props: Props) => {\n  const {content} = props;\n  const [selectedOption, selectOption] = useState<number | null>(null);\n\n  return (\n    <div className=\"modal-content modal-options\">\n      <p>\n        {content.description}\n      </p>\n      <div className=\"banner\" style={{ backgroundImage: `url(${process.env.PUBLIC_URL}/${content.bannerImg})`}}></div>\n      <ul className=\"options\">\n        {content.options.map((option, index) => (\n          <li key={option} className={index === selectedOption ? \"active\" : \"\"} onClick={() => selectOption(index)} >\n            <div className=\"checkbox\">\n              <CheckSvg className=\"check\" />\n            </div>\n            <div className=\"text\">\n              {option}\n            </div>\n          </li>\n        ))}\n      </ul>\n      <button disabled={selectedOption === null} >\n        <b>Okay</b>\n      </button>\n    </div>\n  )\n}\n\nexport default OptionsModalContent;\n\n","import React, { useState } from 'react';\nimport { IframeContent } from '../../common/constants';\n\ninterface Props {\n  content: IframeContent;\n}\n\nconst IframeModalContent = (props: Props) => {\n  const {content} = props;\n  \n  return (\n    <iframe\n      title=\"21cc game\"\n      src={content.url}\n      width=\"100%\"\n      height={content.height}\n    /> \n  )\n}\n\nexport default IframeModalContent;\n\n","import React, { useRef, useEffect, useState } from 'react';\nimport { Sprite, Container, Stage } from '@inlet/react-pixi';\nimport { SceneElement, SceneElementType } from '../../common/constants';\nimport * as PIXI from 'pixi.js';\n\ninterface Props {\n  sceneConfig: SceneElement[];\n  avatar: string;\n}\n\n\nif (process.env.NODE_ENV === \"development\") {\n  // @ts-ignore\n  window.__PIXI_INSPECTOR_GLOBAL_HOOK__ && window.__PIXI_INSPECTOR_GLOBAL_HOOK__.register({ PIXI: PIXI });\n}\n\nconst SituationScene = (props: Props & React.ComponentProps<typeof Container>) => {\n  // const ref = useRef<PIXI.Sprite>(null);\n  // const data = useRef<PIXI.interaction.InteractionData>();\n  // const [position, setPosition] = useState<PIXI.Point>(props.position || new PIXI.Point());\n  // const popInDuration = 1;\n  const {sceneConfig, avatar, ...otherProps} = props;\n  const renderElement = (sceneElement: SceneElement) => {\n    const scale: [number, number] = [sceneElement.scale || 1, sceneElement.scale || 1];\n    if (sceneElement.flipped) scale[0] = -scale[0];\n\n\n    switch (sceneElement.type) {\n      case SceneElementType.avatar:\n        return (\n          <Sprite \n            image={`${process.env.PUBLIC_URL}/images/avatars/${avatar}-${sceneElement.pose || \"front\"}.png`} \n            key=\"avatar\" \n            position={sceneElement.position}\n            scale={scale}\n            anchor={[0.5, 0]}\n          />\n        )\n      default: \n        return (\n          <Sprite \n            image={`${process.env.PUBLIC_URL}/${sceneElement.image}`} \n            key={sceneElement.image} \n            position={sceneElement.position}\n          />\n        )\n    }\n  }\n  return (\n      <Stage width={1280} height={720} className=\"scene\" options={{backgroundColor: 0xffffff}}>\n        <Container {...otherProps} >\n         {sceneConfig.map(e => renderElement(e))}\n        </Container>\n      </Stage>\n  )\n}\n\nexport default SituationScene;","import React, { useState, useEffect, useRef, useMemo, useCallback } from 'react';\nimport { ConflictContent, SequenceItemType, SceneElement } from '../../common/constants';\nimport { gsap, Linear, Bounce, Sine } from 'gsap'\nimport { TextPlugin } from 'gsap/all';\nimport \"./conflictModal.css\";\nimport sound from 'pixi-sound';\nimport SituationScene from '../pixi/SituationScene';\n\ngsap.registerPlugin(TextPlugin);\nconst SPEED_MODIFIER = 1; // for debugging\n\ninterface Props {\n  content: ConflictContent;\n  avatar: string;\n  setCorrectAnswer: (index: number) => void;\n  selectedAnswer?: number; // When answer has been set correctly before\n}\n\nconst ConflictModalContent = (props: Props) => {\n  const {content, avatar, selectedAnswer = null} = props;\n  const [selectedOption, selectOption] = useState<number | null>(selectedAnswer);\n  // Reaction based on current selection\n  const reaction = useMemo(() => {\n    if (selectedOption === null) return null;\n    return props.content.reactions[selectedOption];\n  }, [props.content.reactions, selectedOption]);\n  \n  const [confirmed, setConfirmed] = useState(selectedAnswer != null);\n  const [sceneConfig, setSceneConfig] = useState<SceneElement[]>(reaction?.scene || props.content.scene);\n  const balloonRef = useRef<HTMLDivElement>(null);\n  const balloonArrowRef = useRef<HTMLDivElement>(null);\n  const balloonTextRef = useRef<HTMLSpanElement>(null);\n  const insetRef = useRef<HTMLDivElement>(null);\n  const ref = useRef<HTMLDivElement>(null);\n  const nextButtonRef = useRef<HTMLButtonElement>(null);\n\n  const handleOptionClick = (element: HTMLLIElement, index: number) => {\n    element.className = \"animating\";\n    if (!ref.current) return;\n\n    // Fade out the non selected options\n    const otherOptions = ref.current!.querySelectorAll(\".options .normal\");\n    gsap.to(otherOptions, {\n      duration: 0.5,\n      opacity: 0,\n      ease: Linear.easeNone,\n    });\n\n    // Move current option to top\n    var parentTop = ref.current!.querySelector(\".options\")!.getBoundingClientRect().top; // Initial parent's top distance from the top of the viewport;\n    var childTop = element.getBoundingClientRect().top;\n    var distance = Math.abs(parentTop - childTop);\n\n    gsap.to(element, {\n      duration: 0.5,\n      top: -distance,\n      ease: Linear.easeNone,\n      onComplete: () => {\n        setTimeout(() => {\n          element.className = \"\";\n          selectOption(index);\n        }, 250);\n      }\n    });\n  };\n\n  useEffect(() => {\n    sound.add('correct', `${process.env.PUBLIC_URL}/sound/correct.mp3`);    \n    sound.add('wrong', `${process.env.PUBLIC_URL}/sound/wrong.mp3`);\n  }, []);\n\n  const sequence = useRef<gsap.core.Timeline>();\n  const playSequence = useCallback(() => {\n    const tl = gsap.timeline();\n    sequence.current = tl;\n    const balloonText = balloonTextRef!.current!;\n    const inset = insetRef.current!;\n    gsap.killTweensOf(balloonText);\n\n    // Reset\n    if (nextButtonRef.current) nextButtonRef.current!.removeAttribute('style');\n    balloonRef.current!.removeAttribute('style');\n    inset.removeAttribute('style');\n\n    // Build timeline\n    balloonText.innerHTML = content.sequence[0].text;\n\n    // All the sequences\n    content.sequence.forEach((sequenceItem, index) => {\n\n      const onStart = () => {\n        if (balloonArrowRef.current) {\n          balloonArrowRef.current.style.visibility = sequenceItem.type === SequenceItemType.speech ? 'visible' : 'hidden';\n        }\n        if (sequenceItem.type !== SequenceItemType.image) {\n          if (balloonRef.current) {\n            balloonRef.current!.className = `balloon ${sequenceItem.type}`;\n          }\n          balloonText.innerHTML = sequenceItem.text;\n          \n          if (sequenceItem.balloonArrowPos) {\n            balloonArrowRef.current!.style.right = `${sequenceItem.balloonArrowPos}%`;  \n          }\n          positionArrow();\n        }\n\n        if (sequenceItem.scene) {\n          setSceneConfig(sequenceItem.scene);\n        }\n      }\n\n      let duration = 0;\n      if (sequenceItem.type === SequenceItemType.image) {\n        duration = 2 / SPEED_MODIFIER;\n        balloonRef.current!.style.visibility = 'visible';\n      } else {\n        duration = sequenceItem.text.length * 0.025 / SPEED_MODIFIER;\n      }\n\n      tl.add(`seq-${index}`);\n      if (sequenceItem.type === SequenceItemType.caption) {\n        tl.to(balloonText, {\n          onStart,\n          delay: 0 / SPEED_MODIFIER,\n          duration,\n          text: {\n            value: sequenceItem.text, \n            oldClass: \"hidden\",\n            newClass: \"visible\"\n          },\n          ease: Linear.easeNone,\n        });\n      }\n      else {\n        tl.to(balloonText, {\n          onStart,\n          delay: 3 / SPEED_MODIFIER,\n          duration,\n          ease: Linear.easeNone,\n        });\n      }\n    });\n\n    tl.add(`seq-${content.sequence.length}`);\n\n    // Fade the balloon out\n    tl.to(balloonRef.current, {\n      delay: 3 / SPEED_MODIFIER,\n      duration: .5,\n      autoAlpha: 0,\n      ease: Linear.easeNone,\n    });\n\n    // Slide inset in\n    tl.to(inset, {\n      onStart: () => {\n        if (nextButtonRef.current) \n          nextButtonRef.current!.style.display = \"none\";\n\n        if (balloonArrowRef.current)\n          balloonArrowRef.current.style.visibility = 'hidden';\n      },\n      duration: .5,\n      left: 0,\n      ease: Sine.easeInOut,\n    }, \"-=1\");\n  }, [content.sequence]);\n\n  const positionArrow = () => {\n    if (!balloonRef.current || !balloonArrowRef.current) return;\n    const rect = balloonRef.current.getBoundingClientRect();\n    balloonArrowRef.current.style.top = `${balloonRef.current.offsetTop + rect.height}px`;\n  }\n\n  useEffect(() => {\n    window.addEventListener('resize', positionArrow);\n    return () => {\n      window.removeEventListener('resize', positionArrow);\n    }\n  }, []);\n\n  const handleSkipSequenceStep = () => {\n    if (!sequence.current) return;\n    const currentIndex = parseInt(sequence.current.currentLabel().substring('seq-'.length));\n    sequence.current.seek(`seq-${currentIndex+1}`, false);\n  }\n\n  useEffect(() => {\n    if (selectedAnswer) {\n      insetRef.current!.style.left = '0px';\n      balloonRef.current!.style.visibility = 'hidden';\n    }\n    else {\n      playSequence();\n    }\n  }, [content.sequence, playSequence, selectedAnswer]);\n\n  const handleReplay = () => {\n    setSceneConfig(props.content.scene);\n    selectOption(null);\n    setConfirmed(false);\n    playSequence();\n  }\n\n  const handleYes = () => {\n    setConfirmed(true);\n    setSceneConfig(reaction!.scene);\n\n    if (reaction!.correct) {\n      sound.play('correct');\n      props.setCorrectAnswer(selectedOption!);\n    } else {\n      sound.play('wrong');\n    }\n  }\n\n  const renderReaction = () => {\n    if (!reaction) {\n      return null;\n    }\n    if (!confirmed) {\n      return (\n        <>\n          <p>{reaction.confirmText}</p>\n          <button onClick={handleYes}>yes</button>\n          <button onClick={handleReplay}>no</button>\n        </>\n      )\n    }\n    return (\n      <>\n        { reaction?.correct && (<p className=\"right-option\">You’ve chosen the right option!</p>)}\n        {reaction.text.split(\"\\n\").map(p => <p key={p.substring(0, 10)}>{p}</p>)}\n        { (!reaction?.correct) && (\n         <button onClick={handleReplay} className=\"replay\">\n           Replay\n         </button>\n        )}     \n      </>\n    )\n  }\n\n  const renderOption = (option: string, index: number) => {\n    if (selectedOption === null) {\n      // Nothing selected, render all\n      return (\n        <li key={option} className=\"normal\" onClick={(e) => handleOptionClick(e.currentTarget, index)} >\n          <div className=\"text\">\n            {option}\n          </div>\n        </li>\n      );\n    }\n    if (selectedOption === index) {\n      // Render only selected option\n      let className = '';\n      if (confirmed) {\n        className = reaction?.correct ? \"correct\" : \"wrong\";\n      }\n\n      return (\n        <li key={option} className={className} >\n          <div className=\"text\">\n            {option}\n          </div>\n        </li>\n      );\n    }\n  }\n\n  return (\n    <div className=\"modal-content modal-conflict\" ref={ref}>\n      <div className=\"situation\">\n        { props.content.scene && <SituationScene sceneConfig={sceneConfig} avatar={avatar}/>}\n        <div className=\"inset\" ref={insetRef}>\n          <p>\n            {content.description}\n          </p>\n          <ul className=\"options\">\n            {content.options.map((option, index) => renderOption(option, index))}\n          </ul>\n          { renderReaction() }\n        </div> \n        <div className={`balloon`} ref={balloonRef}>\n          <span ref={balloonTextRef}></span>\n        </div>\n        <div className=\"balloon-arrow\" ref={balloonArrowRef} style={{visibility: 'hidden'}}/>\n      </div>\n      { !selectedOption && (\n        <div className=\"controls-bottomright\">\n          <button className=\"button-replay\" onClick={handleReplay}>\n            replay\n          </button>\n          <button className=\"button-next\" ref={nextButtonRef} onClick={handleSkipSequenceStep}>\n            >\n          </button>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default ConflictModalContent;","import React from \"react\";\nimport { PixiComponent, applyDefaultProps, Container, useApp, Sprite } from \"@inlet/react-pixi\";\nimport * as PIXI  from 'pixi.js';\n\n\nexport enum Orientation {\n  northEast,\n  southEast,\n  southWest,\n  northWest,\n}\n\ninterface Props  {\n    orientation: Orientation;\n};\n\nconst Forklift = React.forwardRef<PIXI.Container, any>((props: Props & React.ComponentProps<typeof Container>, ref) => {\n  return (\n    <Container {...props} ref={ref}>\n      { props.orientation === Orientation.northEast && <Sprite image={`${process.env.PUBLIC_URL}/images/map/forklift-up.png`}  anchor={[0.5, 0]}/>}\n      { props.orientation === Orientation.southEast && <Sprite image={`${process.env.PUBLIC_URL}/images/map/forklift-down.png`} anchor={[0.5, 0]} />}\n      { props.orientation === Orientation.southWest && <Sprite image={`${process.env.PUBLIC_URL}/images/map/forklift-down.png`} scale={[-1, 1]} anchor={[0.5, 0]}/>}\n      { props.orientation === Orientation.northWest && <Sprite image={`${process.env.PUBLIC_URL}/images/map/forklift-up.png`} scale={[-1, 1]} anchor={[0.5, 0]}/>}\n    </Container>\n  )\n});\n\nexport default Forklift;","import React from 'react';\nimport ReactModal from 'react-modal';\nimport './modal.css';\nimport { AnyContent, ContentType, YoutubeContent, OptionsContent, IframeContent, ConflictContent } from '../../common/constants';\nimport YoutubeModalContent from './YoutubeModalContent';\nimport OptionsModalContent from './OptionsModalContent';\nimport IframeModalContent from './IFrameModalContent';\nimport ConflictModalContent from './ConflictModalContent';\n\ninterface Props {\n  content: AnyContent;\n  avatar: string;\n  onClose: () => void;\n  setCorrectAnswer: (answer: number) => void;\n  selectedAnswer?: number;\n}\n\nconst ContentModal = (props: Props) => {\n  const { content, onClose, setCorrectAnswer, selectedAnswer, avatar } = props;\n\n  const handleClose = () => {\n    onClose();\n  };\n\n  const renderContent = () => {\n    switch(content.type) {\n      case ContentType.youtube: \n        return <YoutubeModalContent content={content.content as YoutubeContent} />;\n      case ContentType.options: \n        return <OptionsModalContent content={content.content as OptionsContent} />;\n      case ContentType.iframe: \n        return <IframeModalContent content={content.content as IframeContent} />;\n      case ContentType.conflict: \n        return (\n          <ConflictModalContent \n            content={content.content as ConflictContent}\n            setCorrectAnswer={setCorrectAnswer}\n            selectedAnswer={selectedAnswer}\n            avatar={avatar}\n          />\n        );\n    }\n  }\n\n  return (\n    <ReactModal\n      isOpen={true}\n      ariaHideApp={false}\n      portalClassName=\"modal-portal\"\n      overlayClassName=\"modal-overlay\"\n      className=\"modal\"\n      onRequestClose={handleClose}\n    >\n      <>\n        <div className=\"header\">\n          <h1>{content.header} </h1>\n          <div className=\"modal-close\" onClick={() => handleClose()}></div>\n        </div>\n        {renderContent()}\n      </>\n    </ReactModal>  \n  )\n}\n\nexport default ContentModal;\n\n","import React from \"react\";\nimport { Viewport as PixiViewport, ClickEventData } from \"pixi-viewport\";\nimport { PixiComponent, useApp } from \"@inlet/react-pixi\";\n\ninterface Props {\n  children: React.ReactNode;\n  onClick?(event: ClickEventData): void;\n  screenWidth: number,\n  screenHeight: number,\n  worldWidth: number,\n  worldHeight: number,\n  minScale?: number;\n  maxScale?: number;\n}\n\n/** Viewport leverages pixi-viewport to create a pannable map \n * https://davidfig.github.io/pixi-viewport/jsdoc/\n */\nconst Viewport = React.forwardRef<PixiViewport, any>((props, ref) => {\n  const app = useApp();\n  if (app) {\n      // Perhaps this is better moved somewhere else\n      const cursor = `url('${process.env.PUBLIC_URL}/img/cursors/dwarven_gauntlet_extra_6.png'), auto`;\n      app.renderer.plugins.interaction.cursorStyles.pointer = cursor;\n  }\n  return <PixiComponentViewport app={app} {...props} ref={ref} />;  \n})\n\ninterface PixiComponentProps {\n    app: PIXI.Application;\n}\n\nconst PixiComponentViewport = PixiComponent(\"Viewport\", {\n  create: (props: PixiComponentProps & Props) => {\n    const viewport = new PixiViewport({\n      screenWidth: props.screenWidth,\n      screenHeight: props.screenHeight,\n      worldWidth: props.worldWidth,\n      worldHeight: props.worldHeight,\n      ticker: props.app.ticker,\n      interaction: props.app.renderer.plugins.interaction,\n      // the interaction module is important for wheel to work properly when renderer.view is placed or scaled\n    });\n\n    const { \n      minScale = .5, \n      maxScale = 1 \n    } = props;\n    \n    viewport\n      .drag()\n      .pinch()\n      .wheel()\n      .clamp({ direction: 'all' })\n      .clampZoom({ minScale, maxScale })\n      .decelerate();\n\n    return viewport;\n  },\n});\nexport default Viewport;\n","import React, { useRef, useEffect, useState } from 'react';\nimport { Sprite, Container, useApp } from '@inlet/react-pixi';\nimport * as PIXI from 'pixi.js';\nimport { gsap, Linear } from 'gsap'\n\nconst boxImagePath = `${process.env.PUBLIC_URL}/images/map/conveyor-box.png`;\n\nconst Conveyor = (props: React.ComponentProps<typeof Container>) => {\n  const boxContainerRef = useRef<PIXI.Container>(null);\n  const [boxTexture, setBoxTexture] = useState<PIXI.Texture>();\n  const app = useApp();\n\n  useEffect(() => {\n    if (!app.loader.resources[boxImagePath]) {\n      app.loader.add(boxImagePath)\n      .load((_, rss) => {\n        setBoxTexture(rss[boxImagePath]!.texture);\n      })\n    } else {\n      setBoxTexture(app.loader.resources[boxImagePath]!.texture);\n    }\n  }, [app]);\n\n  useEffect(() => {\n    if (!boxTexture) return;\n\n    const spawnBox = (delay: number) => {\n      const sprite = new PIXI.Sprite(boxTexture);\n      boxContainerRef.current?.addChild(sprite);\n      sprite.x = 568;\n      sprite.y = 160;\n\n      const tl = gsap.timeline({\n        delay,\n        repeat: -1, \n        repeatDelay: 1\n      });\n      tl.to(sprite, {\n        ease: Linear.easeNone,\n        pixi: { \n          x: 956,\n          y: 256\n        }, \n        duration: 5\n      });\n      tl.to(sprite, {\n        ease: Linear.easeNone,\n        pixi: { \n          x: 959,\n          y: 278\n        }, \n        duration: .5\n      });\n      tl.to(sprite, {\n        ease: Linear.easeNone,\n        pixi: { \n          x: 541,\n          y: 473\n        }, \n        duration: 6\n      });\n      tl.to(sprite, {\n        delay: 1,\n        ease: Linear.easeNone,\n        pixi: { \n          alpha: 0\n        }, \n        duration: 1\n      });\n\n      // const duration = 3;\n      // gsap.to(sprite, { \n      //   duration,\n      //   ease: Linear.easeNone,\n      //   pixi: { \n      //     //visible: false,\n      //     x: boxMovePath[1][0], \n      //     y: boxMovePath[1][1],\n      //   }\n      // });\n    }\n\n    spawnBox(0);\n    spawnBox(3);\n    spawnBox(5.5);\n    spawnBox(7);\n    spawnBox(9.5);\n  }, [boxTexture]);\n\n  return (\n    <Container {...props}>\n      <Sprite image={`${process.env.PUBLIC_URL}/images/map/rack-small.png`} />\n      <Sprite image={`${process.env.PUBLIC_URL}/images/map/conveyor-right.png`} x={87} y={152} />\n      <Sprite image={`${process.env.PUBLIC_URL}/images/map/rack-small.png`} x={160} y={39} />\n      <Sprite image={`${process.env.PUBLIC_URL}/images/map/conveyor-right.png`} x={251} y={192} />\n      \n      <Sprite image={`${process.env.PUBLIC_URL}/images/map/conveyor-left.png`} x={520} y={234} />\n      <Container ref={boxContainerRef}>\n\n      </Container>\n      {/* <Sprite image={`${process.env.PUBLIC_URL}/images/map/conveyor-box.png`} x={568} y={160} name=\"box1\" />\n      <Sprite image={`${process.env.PUBLIC_URL}/images/map/conveyor-box.png`} x={956} y={267} name=\"box2\" /> */}\n      \n      <Sprite image={`${process.env.PUBLIC_URL}/images/map/rack-small.png`} x={320} y={78} />\n      \n      {/* 956,267 */}\n    </Container>\n  );\n}\n\nexport default Conveyor;","import React, { useRef, useEffect, useState } from 'react';\nimport { Sprite, Container } from '@inlet/react-pixi';\nimport Forklift, { Orientation } from './Forklift';\nimport { gsap, Linear } from 'gsap'\n\nconst BigRacks = (props: React.ComponentProps<typeof Container>) => {\n  const forkliftRef = useRef<PIXI.Container>(null);\n  const [forkliftOrientation, setForkliftOrientation] = useState<Orientation>(Orientation.southWest);\n  const [forkliftLane, setForkliftLane] = useState<number>(1); // lane 1 is furthest away, lane 2 is closest by\n\n  useEffect(() => {\n    const tl = gsap.timeline({\n      repeat: -1, \n      repeatDelay: 1\n    });\n    tl.to(forkliftRef.current, {\n      onStart: () => { setForkliftOrientation(Orientation.southEast); setForkliftLane(1) },\n      ease: Linear.easeNone,\n      pixi: { \n        x: 1135,\n        y: 148\n      }, \n      duration: 5\n    });\n    tl.to(forkliftRef.current, {\n      onStart: () => { setForkliftOrientation(Orientation.southWest); setForkliftLane(0)},\n      ease: Linear.easeNone,\n      pixi: { \n        x: 782,\n        y: 330\n      }, \n      duration: 3.5\n    });\n    tl.to(forkliftRef.current, {\n      onStart: () => { setForkliftOrientation(Orientation.northWest); setForkliftLane(3)},\n      ease: Linear.easeNone,\n      pixi: { \n        x: 42,\n        y: 130\n      }, \n      duration: 5\n    });\n    tl.to(forkliftRef.current, {\n      onStart: () => { setForkliftOrientation(Orientation.northEast); setForkliftLane(0)},\n      ease: Linear.easeNone,\n      pixi: { \n        x: 306,\n        y: 58\n      }, \n      duration: 2\n    });\n    tl.to(forkliftRef.current, {\n      onStart: () => { setForkliftOrientation(Orientation.southEast); setForkliftLane(2)},\n      ease: Linear.easeNone,\n      pixi: { \n        x: 906,\n        y: 241\n      }, \n      duration: 4\n    });\n    tl.to(forkliftRef.current, {\n      onStart: () => { setForkliftOrientation(Orientation.southWest); setForkliftLane(0)},\n      ease: Linear.easeNone,\n      pixi: { \n        x: 782,\n        y: 330\n      }, \n      duration: 2\n    });\n    tl.to(forkliftRef.current, {\n      onStart: () => { setForkliftOrientation(Orientation.northWest); setForkliftLane(3)},\n      ease: Linear.easeNone,\n      pixi: { \n        x: 42,\n        y: 130\n      }, \n      duration: 5\n    });\n  }, []);\n\n  /** note, this z order stuff friggin blows */\n  return (\n    <Container {...props}>\n      <Sprite image={`${process.env.PUBLIC_URL}/images/map/rack-big.png`} x={385} y={-172} />\n      <Sprite image={`${process.env.PUBLIC_URL}/images/map/rack-big.png`} x={191} y={-84} />\n\n      <Forklift orientation={forkliftOrientation} ref={forkliftRef} x={484} y={72} />\n      { forkliftLane === 1 && <Sprite image={`${process.env.PUBLIC_URL}/images/map/rack-big.png`} x={385} y={-172} />}\n      { forkliftLane > 0 && forkliftLane < 3 && <Sprite image={`${process.env.PUBLIC_URL}/images/map/rack-big.png`} x={191} y={-84} />}\n\n\n      <Sprite image={`${process.env.PUBLIC_URL}/images/map/rack-big.png`} y={0} x={0} name=\"racks closest\"/>\n    </Container>\n  );\n}\n\nexport default BigRacks;","import React, { useState, useRef, useEffect, useMemo } from \"react\";\nimport { Viewport as PixiViewport } from \"pixi-viewport\";\nimport { AnyContent } from \"../common/constants\";\nimport sound from 'pixi-sound';\nimport Marker from \"./pixi/Marker\";\nimport { Stage, Sprite } from \"@inlet/react-pixi\";\nimport ContentModal from \"./contentModal\";\nimport Viewport from \"./pixi/Viewport\";\nimport * as PIXI from 'pixi.js';\nimport { PixiPlugin } from 'gsap/all';\nimport { gsap } from 'gsap'\nimport Conveyor from \"./pixi/Conveyor\";\nimport BigRacks from \"./pixi/BigRacks\";\n\nPixiPlugin.registerPIXI(PIXI);\ngsap.registerPlugin(PixiPlugin);\n\n// if (process.env.NODE_ENV === \"development\") {\n//   // @ts-ignore\n//   window.__PIXI_INSPECTOR_GLOBAL_HOOK__ && window.__PIXI_INSPECTOR_GLOBAL_HOOK__.register({ PIXI: PIXI });\n// }\n\ninterface Props {\n  content: AnyContent[];\n  avatar: string;\n}\n\nconst Main = (props: Props) => {\n  const { content, avatar } = props;\n  const viewportRef = useRef<PixiViewport>(null);\n  const [selectedSituation, setSelectedSituation] = useState<number | null>(null);\n  const [answers, setAnswers] = useState<number[]>([]);\n\n  const worldWidth = 3497;\n  const worldHeight = 1419;\n\n  const [canvasWidth, setCanvasWidth] = useState(1200);\n  const [canvasHeight, setCanvasHeight] = useState(600);\n\n  useEffect(() => {\n    // This will set the dimensions of the canvas to that of the window\n    const resize = () => {\n      const width = Math.min(window.innerWidth, window.outerWidth);\n      const height = Math.min(window.innerHeight, window.outerHeight);\n      setCanvasWidth(width);\n      setCanvasHeight(height); \n    }\n    resize();\n\n    window.addEventListener(\"resize\", resize);\n    return () => {\n      window.removeEventListener(\"resize\", resize);\n    };\n  }, []);\n\n  useEffect(() => {\n    // Center the map\n    if (viewportRef.current) {\n      const viewport = viewportRef.current;\n      viewport.moveCenter(worldWidth / 2, worldHeight / 2);  \n      viewport.scale = new PIXI.Point(0.5, 0.5);\n    }\n  }, [canvasWidth, canvasHeight]);\n\n  useEffect(() => {\n    // Blur the map when situation is selected\n    if (selectedSituation) {\n      gsap.to(viewportRef.current, {duration: .5, pixi: {blur:20}});\n    } else {\n      gsap.to(viewportRef.current, {duration: .5, pixi: {blur:0}});\n    }\n  }, [selectedSituation]);\n\n  useEffect(() => {\n    sound.add('plops', {\n      url: `${process.env.PUBLIC_URL}/sound/plops.wav`,\n      autoPlay: true,\n    });    \n  }, []);\n\n  const handleMarkerClick = (content: AnyContent, index: number) => {\n    setSelectedSituation(index);\n  }\n\n  const handleClose = () => {\n    setSelectedSituation(null);\n  }\n\n  const handleCorrectAnswer = (answer: number) => {\n    // gets called from within modal once the correct answer is selected\n    const copy = [...answers];\n    copy[selectedSituation!] = answer;\n\n    setAnswers(copy);\n  }\n\n  const selectedContent = useMemo(() => {\n    if (selectedSituation === null) {\n      return null;\n    }\n    return content?.[selectedSituation];\n  }, [content, selectedSituation]);\n  \n  const renderMarker = (contentItem: AnyContent, index: number) => {\n    const delay = index * 0.5;\n    const position = new PIXI.Point(contentItem.position[0], contentItem.position[1]);\n    const bounce = !answers.hasOwnProperty(index);\n\n    return (\n      <Marker \n        position={position} \n        pointerdown={() => handleMarkerClick(contentItem, index)}\n        delay={delay}\n        bounce={bounce}\n        key={contentItem.position.join('-')}\n      />\n    ); \n  }\n\n  return (\n    <>\n      <Stage width={canvasWidth} height={canvasHeight} options={{transparent: true}} >\n      <Viewport screenWidth={canvasWidth} screenHeight={canvasHeight} worldWidth={worldWidth} worldHeight={worldHeight} ref={viewportRef} >\n        <Sprite image={`${process.env.PUBLIC_URL}/images/map/warehouse-back.png`} >\n          <BigRacks x={1153} y={207} />\n          <Sprite image={`${process.env.PUBLIC_URL}/images/map/safe.png`} x={2086} y={296} />\n          <Sprite image={`${process.env.PUBLIC_URL}/images/map/middle.png`} x={806} y={334} />\n\n          <Conveyor name={\"Conveyor\"} x={269} y={498} />\n          <Sprite image={`${process.env.PUBLIC_URL}/images/map/packing.png`} x={995} y={848} name=\"packing-table\"/>\n\n          <Sprite image={`${process.env.PUBLIC_URL}/images/map/warehouse-front-wall.png`} y={705} name=\"front-wall\"/>\n          {content.map((contentItem, index) => renderMarker(contentItem, index))}\n        </Sprite>\n      </Viewport>\n    </Stage>\n    { selectedContent && (\n      <ContentModal \n        content={selectedContent} \n        onClose={handleClose}\n        avatar={avatar}\n        setCorrectAnswer={handleCorrectAnswer}\n        selectedAnswer={(answers[selectedSituation!])}\n      /> \n    )}\n\n    </>\n  )\n};\n\nexport default Main;","import React, { useEffect } from 'react';\nimport ReactModal from 'react-modal';\nimport './introModal.css';\nimport { Stage, Sprite, Container } from '@inlet/react-pixi';\nimport {OutlineFilter} from '@pixi/filter-outline';\nimport * as PIXI from 'pixi.js';\n\ninterface Props {\n  selectedAvatar?: string;\n  onClose: () => void;\n  onChangeAvatar: (name: string) => void;\n}\n\nconst stageHeight = 720;\nconst stageWidth = 1280;\n\nconst IntroModal = (props: Props) => {\n  const {selectedAvatar} = props;\n\n  const renderAvatar = (name: string, index: number) => {\n    const filters = selectedAvatar === name ? [new OutlineFilter(4, 0xffcc00)] : [];\n    const scale = selectedAvatar === name ? .7 : .6;\n    const zIndex = selectedAvatar === name ? 2 : 0;\n\n    const image = `${process.env.PUBLIC_URL}/images/avatars/${getAvatarImage(name)}.png`;\n\n    return <Sprite \n      image={image} \n      filters={filters} \n      anchor={[0.5, 0.5]}\n      scale={scale}\n      y={stageHeight / 2}\n      x={stageWidth / 5 + (index * (stageWidth / 5))}\n      zIndex={zIndex}\n      interactive\n      pointerdown={() => props.onChangeAvatar(name)}\n    />;\n  }\n\n  return (\n    <ReactModal\n      isOpen={true}\n      ariaHideApp={false}\n      portalClassName=\"modal-portal\"\n      overlayClassName=\"modal-overlay modal-intro-overlay\"\n      className=\"modal modal-intro\"\n      onRequestClose={props.onClose}\n    >\n      <div className=\"modal-content\">\n        <h1 className=\"header\">Conflict situations</h1>\n        <p className=\"subtext\">\n          You’re a warehouse manager at Express Warehousing Ltd. \n          Choose an avatar.       \n        </p>\n        <div className=\"avatar-selection\">\n          <Stage width={stageWidth} height={stageHeight} options={{ backgroundColor: 0xffffff}}>\n            <Sprite image={`${process.env.PUBLIC_URL}/images/avatars/background.png`} \n              filters={[new PIXI.filters.BlurFilter(4)]} \n              scale={.95} \n              anchor={.5}\n              y={stageHeight / 2}\n              x={stageWidth / 2}\n            />\n            <Container sortableChildren>\n              { renderAvatar('avatar1', 0) }\n              { renderAvatar('avatar2', 1) }\n              { renderAvatar('avatar3', 2) }\n              { renderAvatar('avatar4', 3) }\n            </Container>\n          </Stage>\n        </div>\n        <div className=\"footer\">\n          <button \n            onClick={props.onClose} \n            disabled={props.selectedAvatar === undefined}\n          >\n            Start\n          </button>\n        </div>\n      </div>\n    </ReactModal>  \n    )\n}\n\nconst getAvatarImage = (avatar: string) => {\n  switch (avatar) {\n    case \"avatar1\":\n      return \"avatar1-angle\";\n    case \"avatar2\":\n      return \"avatar2-front\";\n    case \"avatar3\":\n      return \"avatar3-front\";\n    case \"avatar4\":\n      return \"avatar4-angle\";\n  }\n}\n\nexport default IntroModal;\n","import React, { useState } from 'react';\nimport './App.css';\nimport content from './content/parseContent';\nimport Main from './components/Main';\nimport IntroModal from './components/introModal/introModal';\n\n\n\nfunction App() {\n\n  const [intro, setIntro] = useState(true);\n  const [avatar, setAvatar] = useState<string>();\n\n  return (\n    <>\n      { intro && (<IntroModal selectedAvatar={avatar} onClose={() => {setIntro(false)}} onChangeAvatar={setAvatar}/>)}\n      { !intro && avatar && <Main content={content} avatar={avatar}/> }\n    </>  \n  )\n};\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}